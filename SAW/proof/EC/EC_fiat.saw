/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
*/

let limb_length = 64;
let p384_felem_limbs = 6;

let points_to_point x_ptr y_ptr z_ptr point = do {
  crucible_points_to x_ptr (crucible_term {{ point@0 }});
  crucible_points_to y_ptr (crucible_term {{ point@1 }});
  crucible_points_to z_ptr (crucible_term {{ point@2 }});
};

let p384_field_square_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_square inarg}});
};

let p384_field_square_same_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, outarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_square outarg}});
};

let p384_field_mul_same_l_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, outarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_mul outarg inarg}});
};

let p384_field_mul_same_r_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, inarg_ptr, outarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_mul inarg outarg}});
};

let p384_field_mul_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg1, inarg1_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg2, inarg2_ptr) <- ptr_to_fresh_readonly "inarg2" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, inarg1_ptr, inarg2_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_mul inarg1 inarg2}});
};

let p384_field_add_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg1, inarg1_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg2, inarg2_ptr) <- ptr_to_fresh_readonly "inarg2" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, inarg1_ptr, inarg2_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_add inarg1 inarg2}});
};

let p384_field_add_same_in_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, inarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_add inarg inarg}});
};

let p384_field_add_same_l_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, outarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_add outarg inarg}});
};

let p384_field_add_same_all_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, outarg_ptr, outarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_add outarg outarg}});
};

let p384_field_sub_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg1, inarg1_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg2, inarg2_ptr) <- ptr_to_fresh_readonly "inarg2" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [outarg_ptr, inarg1_ptr, inarg2_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_sub inarg1 inarg2}});
};

let p384_field_sub_same_l_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [outarg_ptr, outarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_sub outarg inarg}});
};

let p384_nz_spec = do {
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [inarg_ptr];

  crucible_return (crucible_term {{ fiat_field_nz inarg }});
};

let p384_cmovznz_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  test <- crucible_fresh_var "test" (llvm_int limb_length);
  (inarg1, inarg1_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg2, inarg2_ptr) <- ptr_to_fresh_readonly "inarg2" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [outarg_ptr, (crucible_term test), inarg1_ptr, inarg2_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_cmovznz test inarg1 inarg2}});
};

let p384_cmovznz_same_r_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
  test <- crucible_fresh_var "test" (llvm_int limb_length);
  (inarg1, inarg1_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [outarg_ptr, (crucible_term test), inarg1_ptr, outarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_cmovznz test inarg1 outarg}});
};

let p384_cmovznz_same_l_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
  test <- crucible_fresh_var "test" (llvm_int limb_length);
  (inarg2, inarg2_ptr) <- ptr_to_fresh_readonly "inarg2" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [outarg_ptr, (crucible_term test), outarg_ptr, inarg2_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_cmovznz test outarg inarg2}});
};

let p384_cmovznz_same_r_spec = do {
  (outarg, outarg_ptr) <- ptr_to_fresh "outarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
  test <- crucible_fresh_var "test" (llvm_int limb_length);
  (inarg1, inarg1_ptr) <- ptr_to_fresh_readonly "inarg1" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [outarg_ptr, (crucible_term test), inarg1_ptr, outarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_cmovznz test inarg1 outarg}});
};


let constant_time_is_zero_w_spec = do {
  inarg <- crucible_fresh_var "inarg" (llvm_int limb_length);
 
  crucible_execute_func [(crucible_term inarg)];

  crucible_return (crucible_term {{ constant_time_is_zero_w inarg }});
};

let p384_from_generic_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg" (llvm_int 384);
 
  crucible_execute_func [outarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_from_generic inarg}});
};

let p384_to_generic_spec = do {
  outarg_ptr <- crucible_alloc (llvm_int 384);
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [outarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_to_generic inarg}});
};

let p384_select_point_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));
  id <- crucible_fresh_var "id" (llvm_int 64);
  (points, points_ptr) <- ptr_to_fresh_readonly "points" (llvm_array 64 (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length))));
 
  crucible_execute_func [outarg_ptr, (crucible_term id), points_ptr, (crucible_term {{ 64 }})];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_select_point id points }});
};

let p384_mul_scalar_rwnaf_spec = do {
  rnaf_ptr <- crucible_alloc (llvm_array 55 (llvm_int 16));
  (scalar, scalar_ptr) <- ptr_to_fresh_readonly "scalar" i384;
 
  crucible_execute_func [rnaf_ptr, scalar_ptr];

  crucible_points_to rnaf_ptr (crucible_term {{ fiat_mul_scalar_rwnaf scalar }});
};

let p384_opp_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [outarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term {{ fiat_field_opp inarg }});
};

let p384_copy_spec = do {
  outarg_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  (inarg, inarg_ptr) <- ptr_to_fresh_readonly "inarg" (llvm_array p384_felem_limbs (llvm_int limb_length));
 
  crucible_execute_func [outarg_ptr, inarg_ptr];

  crucible_points_to outarg_ptr (crucible_term inarg);
};


fiat_p384_square_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_square"
  p384_field_square_spec;

fiat_p384_square_same_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_square"
  p384_field_square_same_spec;

fiat_p384_mul_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_mul"
  p384_field_mul_spec;

fiat_p384_mul_same_l_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_mul"
  p384_field_mul_same_l_spec;

fiat_p384_mul_same_r_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_mul"
  p384_field_mul_same_r_spec;

fiat_p384_add_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_add"
  p384_field_add_spec;

fiat_p384_add_same_l_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_add"
  p384_field_add_same_l_spec;

fiat_p384_add_same_in_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_add"
  p384_field_add_same_in_spec;

fiat_p384_add_same_all_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_add"
  p384_field_add_same_all_spec;

fiat_p384_sub_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_sub"
  p384_field_sub_spec;

fiat_p384_sub_same_l_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_sub"
  p384_field_sub_same_l_spec;

let p384_point_double_spec = do {

  x_out_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  y_out_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  z_out_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));

  (x_in, x_in_ptr) <- ptr_to_fresh_readonly "x_in" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (y_in, y_in_ptr) <- ptr_to_fresh_readonly "y_in" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (z_in, z_in_ptr) <- ptr_to_fresh_readonly "z_in" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [x_out_ptr, y_out_ptr, z_out_ptr, x_in_ptr, y_in_ptr, z_in_ptr];

  points_to_point x_out_ptr y_out_ptr z_out_ptr {{ fiat_point_double [x_in, y_in, z_in] }};
};

let p384_point_double_same_spec = do {

  (x, x_ptr) <- ptr_to_fresh "x" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (y, y_ptr) <- ptr_to_fresh "y" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (z, z_ptr) <- ptr_to_fresh "z" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [x_ptr, y_ptr, z_ptr, x_ptr, y_ptr, z_ptr];

  points_to_point x_ptr y_ptr z_ptr {{ fiat_point_double [x, y, z] }};
};

let p384_point_add_spec mixed = do {

  x3_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  y3_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));
  z3_ptr <- crucible_alloc (llvm_array p384_felem_limbs (llvm_int limb_length));

  (x1, x1_ptr) <- ptr_to_fresh_readonly "x1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (y1, y1_ptr) <- ptr_to_fresh_readonly "y1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (z1, z1_ptr) <- ptr_to_fresh_readonly "z1" (llvm_array p384_felem_limbs (llvm_int limb_length));

  (x2, x2_ptr) <- ptr_to_fresh_readonly "x2" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (y2, y2_ptr) <- ptr_to_fresh_readonly "y2" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (z2, z2_ptr) <- ptr_to_fresh_readonly "z2" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [x3_ptr, y3_ptr, z3_ptr, x1_ptr, y1_ptr, z1_ptr, (crucible_term {{`mixed:[32]}}), x2_ptr, y2_ptr, z2_ptr];

  points_to_point x3_ptr y3_ptr z3_ptr {{ fiat_point_add (`mixed != zero) [x1, y1, z1] [x2, y2, z2] }};
};

let p384_point_add_same_r_spec mixed = do {

  (x1, x1_ptr) <- ptr_to_fresh_readonly "x1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (y1, y1_ptr) <- ptr_to_fresh_readonly "y1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (z1, z1_ptr) <- ptr_to_fresh_readonly "z1" (llvm_array p384_felem_limbs (llvm_int limb_length));

  (x2, x2_ptr) <- ptr_to_fresh "x2" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (y2, y2_ptr) <- ptr_to_fresh "y2" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (z2, z2_ptr) <- ptr_to_fresh "z2" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [x2_ptr, y2_ptr, z2_ptr, x1_ptr, y1_ptr, z1_ptr, (crucible_term {{`mixed:[32]}}), x2_ptr, y2_ptr, z2_ptr];

  points_to_point x2_ptr y2_ptr z2_ptr {{ fiat_point_add (`mixed != zero) [x1, y1, z1] [x2, y2, z2] }};
};

let p384_point_add_same_l_spec mixed = do {

  (x1, x1_ptr) <- ptr_to_fresh "x1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (y1, y1_ptr) <- ptr_to_fresh "y1" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (z1, z1_ptr) <- ptr_to_fresh "z1" (llvm_array p384_felem_limbs (llvm_int limb_length));

  (x2, x2_ptr) <- ptr_to_fresh_readonly "x2" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (y2, y2_ptr) <- ptr_to_fresh_readonly "y2" (llvm_array p384_felem_limbs (llvm_int limb_length));
  (z2, z2_ptr) <- ptr_to_fresh_readonly "z2" (llvm_array p384_felem_limbs (llvm_int limb_length));

  crucible_execute_func [x1_ptr, y1_ptr, z1_ptr, x1_ptr, y1_ptr, z1_ptr, (crucible_term {{`mixed:[32]}}), x2_ptr, y2_ptr, z2_ptr];

  points_to_point x1_ptr y1_ptr z1_ptr {{ fiat_point_add (`mixed != zero) [x1, y1, z1] [x2, y2, z2] }};
};

let points_to_EC_RAW_POINT ptr point = do {
  crucible_points_to_untyped (crucible_field ptr "X") (crucible_term {{ point.X }});
  crucible_points_to_untyped (crucible_field ptr "Y") (crucible_term {{ point.Y }});
  crucible_points_to_untyped (crucible_field ptr "Z") (crucible_term {{ point.Z }});
};

let points_to_fresh_EC_RAW_POINT ptr = do {
  X <- crucible_fresh_var "raw.X" i384;
  crucible_points_to_untyped (crucible_field ptr "X") (crucible_term X);
  Y <- crucible_fresh_var "raw.Y" i384;
  crucible_points_to_untyped (crucible_field ptr "Y") (crucible_term Y);
  Z <- crucible_fresh_var "raw.Z" i384;
  crucible_points_to_untyped (crucible_field ptr "Z") (crucible_term Z);
  return {{ { X = X, Y = Y, Z = Z } : JacobianBVPoint }};
};

let p384_fiat_point_mul_spec = do {

  res_ptr <- crucible_alloc (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));
  table_ptr <- crucible_alloc (llvm_array 64 (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length))));
  p <- crucible_fresh_var "p" (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));
  crucible_points_to (crucible_elem table_ptr 0) (crucible_term p);
  (scalar, scalar_ptr) <- ptr_to_fresh_readonly "p_scalar" i384;

  crucible_execute_func [res_ptr, table_ptr, scalar_ptr];

  crucible_points_to res_ptr (crucible_term {{ fiat_point_mul p scalar }});
};

let p384_point_mul_spec = do {

  group_ptr <- crucible_alloc_readonly (llvm_struct "struct.ec_group_st");
  r_ptr <- crucible_alloc (llvm_struct "struct.EC_RAW_POINT");
  p_ptr <- crucible_alloc_readonly (llvm_struct "struct.EC_RAW_POINT");
  p <- points_to_fresh_EC_RAW_POINT p_ptr;
  (scalar, scalar_ptr) <- ptr_to_fresh_readonly "p_scalar" i384;

  crucible_execute_func [group_ptr, r_ptr, p_ptr, scalar_ptr];

  points_to_EC_RAW_POINT r_ptr 
    {{ fiat_point_mul_generic p scalar }};
};


fiat_p384_point_double_ov <- llvm_verify m "fiat_p384_point_double"
  [ value_barrier_u64_ov
  , fiat_p384_square_ov
  , fiat_p384_square_same_ov
  , fiat_p384_mul_ov
  , fiat_p384_mul_same_r_ov
  , fiat_p384_add_ov
  , fiat_p384_add_same_l_ov
  , fiat_p384_add_same_in_ov
  , fiat_p384_add_same_all_ov
  , fiat_p384_sub_ov
  , fiat_p384_sub_same_l_ov
  ]
  true
  p384_point_double_spec
  (w4_unint_z3 ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub"]);

fiat_p384_point_double_same_ov <- llvm_verify m "fiat_p384_point_double"
  [ value_barrier_u64_ov
  , fiat_p384_square_ov
  , fiat_p384_square_same_ov
  , fiat_p384_mul_ov
  , fiat_p384_mul_same_r_ov
  , fiat_p384_add_ov
  , fiat_p384_add_same_l_ov
  , fiat_p384_add_same_in_ov
  , fiat_p384_add_same_all_ov
  , fiat_p384_sub_ov
  , fiat_p384_sub_same_l_ov
  ]
  true
  p384_point_double_same_spec
  (w4_unint_z3 ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub"]);

double_test_equiv <- prove_folding_theorem {{ \a b c d-> (testForDouble a b c d) == (testForDouble_ct a b c d) }};

constant_time_is_zero_w_ov <- llvm_verify m
  "constant_time_is_zero_w" [] true
  constant_time_is_zero_w_spec (w4_unint_z3 []);

fiat_p384_nz_ov <- llvm_verify m 
  "fiat_p384_nz" [] true
  p384_nz_spec (w4_unint_z3 []);

fiat_p384_cmovznz_ov <- llvm_verify m
  "fiat_p384_cmovznz" [value_barrier_u64_ov] true
  p384_cmovznz_spec (w4_unint_z3 []);

fiat_p384_cmovznz_same_r_ov <- llvm_verify m
  "fiat_p384_cmovznz" [value_barrier_u64_ov] true
  p384_cmovznz_same_r_spec (w4_unint_z3 []);

fiat_p384_cmovznz_same_l_ov <- llvm_verify m
  "fiat_p384_cmovznz" [value_barrier_u64_ov] true
  p384_cmovznz_same_l_spec (w4_unint_z3 []);

fiat_p384_cmovznz_same_r_ov <- llvm_verify m
  "fiat_p384_cmovznz" [value_barrier_u64_ov] true
  p384_cmovznz_same_r_spec (w4_unint_z3 []);

fiat_p384_point_add_jac_ov <- llvm_verify m "fiat_p384_point_add"
  [ value_barrier_u64_ov
  , fiat_p384_square_ov
  , fiat_p384_square_same_ov
  , fiat_p384_mul_ov
  , fiat_p384_mul_same_r_ov
  , fiat_p384_mul_same_l_ov
  , fiat_p384_add_ov
  , fiat_p384_add_same_l_ov
  , fiat_p384_add_same_in_ov
  , fiat_p384_add_same_all_ov
  , fiat_p384_sub_ov
  , fiat_p384_sub_same_l_ov
  , fiat_p384_nz_ov
  , fiat_p384_cmovznz_ov
  , fiat_p384_cmovznz_same_r_ov
  , constant_time_is_zero_w_ov
  , fiat_p384_point_double_ov
  ]
  true
  (p384_point_add_spec 0)
  (do {
    goal_eval_unint 
      ["testForDouble"
      , "fiat_field_square"
      , "fiat_field_mul"
      , "fiat_field_add"
      , "fiat_field_sub"
      , "fiat_field_nz"
      , "constant_time_is_zero_w"
      , "fiat_field_cmovznz"];
    simplify (addsimps [double_test_equiv] basic_ss);
    (w4_unint_z3 ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub", "fiat_field_nz", "constant_time_is_zero_w", "fiat_field_cmovznz"]);
  });


fiat_p384_point_add_mixed_ov <- llvm_verify m "fiat_p384_point_add"
  [ value_barrier_u64_ov
  , fiat_p384_square_ov
  , fiat_p384_square_same_ov
  , fiat_p384_mul_ov
  , fiat_p384_mul_same_r_ov
  , fiat_p384_mul_same_l_ov
  , fiat_p384_add_ov
  , fiat_p384_add_same_l_ov
  , fiat_p384_add_same_in_ov
  , fiat_p384_add_same_all_ov
  , fiat_p384_sub_ov
  , fiat_p384_sub_same_l_ov
  , fiat_p384_nz_ov
  , fiat_p384_cmovznz_ov
  , fiat_p384_cmovznz_same_r_ov
  , constant_time_is_zero_w_ov
  , fiat_p384_point_double_ov
  ]
  true
  (p384_point_add_spec 1)
  (do {
    goal_eval_unint 
      ["testForDouble"
      , "fiat_field_square"
      , "fiat_field_mul"
      , "fiat_field_add"
      , "fiat_field_sub"
      , "fiat_field_nz"
      , "constant_time_is_zero_w"
      , "fiat_field_cmovznz"];
    simplify (addsimps [double_test_equiv] basic_ss);
    (w4_unint_z3 ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub", "fiat_field_nz", "constant_time_is_zero_w", "fiat_field_cmovznz"]);
  });

fiat_p384_point_add_same_r_jac_ov <- llvm_verify m "fiat_p384_point_add"
  [ value_barrier_u64_ov
  , fiat_p384_square_ov
  , fiat_p384_square_same_ov
  , fiat_p384_mul_ov
  , fiat_p384_mul_same_r_ov
  , fiat_p384_mul_same_l_ov
  , fiat_p384_add_ov
  , fiat_p384_add_same_l_ov
  , fiat_p384_add_same_in_ov
  , fiat_p384_add_same_all_ov
  , fiat_p384_sub_ov
  , fiat_p384_sub_same_l_ov
  , fiat_p384_nz_ov
  , fiat_p384_cmovznz_ov
  , fiat_p384_cmovznz_same_r_ov
  , constant_time_is_zero_w_ov
  , fiat_p384_point_double_ov
  ]
  true
  (p384_point_add_same_r_spec 0)
  (do {
    goal_eval_unint 
      ["testForDouble"
      , "fiat_field_square"
      , "fiat_field_mul"
      , "fiat_field_add"
      , "fiat_field_sub"
      , "fiat_field_nz"
      , "constant_time_is_zero_w"
      , "fiat_field_cmovznz"];
    simplify (addsimps [double_test_equiv] basic_ss);
    (w4_unint_z3 ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub", "fiat_field_nz", "constant_time_is_zero_w", "fiat_field_cmovznz"]);
  });

fiat_p384_point_add_same_l_jac_ov <- llvm_verify m "fiat_p384_point_add"
  [ value_barrier_u64_ov
  , fiat_p384_square_ov
  , fiat_p384_square_same_ov
  , fiat_p384_mul_ov
  , fiat_p384_mul_same_r_ov
  , fiat_p384_mul_same_l_ov
  , fiat_p384_add_ov
  , fiat_p384_add_same_l_ov
  , fiat_p384_add_same_in_ov
  , fiat_p384_add_same_all_ov
  , fiat_p384_sub_ov
  , fiat_p384_sub_same_l_ov
  , fiat_p384_nz_ov
  , fiat_p384_cmovznz_ov
  , fiat_p384_cmovznz_same_r_ov
  , fiat_p384_cmovznz_same_l_ov
  , constant_time_is_zero_w_ov
  , fiat_p384_point_double_same_ov
  ]
  true
  (p384_point_add_same_l_spec 0)
  (do {
    goal_eval_unint 
      ["testForDouble"
      , "fiat_field_square"
      , "fiat_field_mul"
      , "fiat_field_add"
      , "fiat_field_sub"
      , "fiat_field_nz"
      , "constant_time_is_zero_w"
      , "fiat_field_cmovznz"];
    simplify (addsimps [double_test_equiv] basic_ss);
    (w4_unint_z3 ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub", "fiat_field_nz", "constant_time_is_zero_w", "fiat_field_cmovznz"]);
  });

let p384_pre_comp_table_spec = do {
  
  table_ptr <- crucible_alloc (llvm_array 64 (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length))));
  p <- crucible_fresh_var "p" (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));
  crucible_points_to (crucible_elem table_ptr 0) (crucible_term p);
  tmp_ptr <- crucible_alloc (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));

  crucible_execute_func [table_ptr, tmp_ptr];

  crucible_points_to table_ptr (crucible_term {{fiat_pre_comp_table p}});
};

let fiat_p384_mul_loop_body_spec = do {
  
  (table, table_ptr) <- ptr_to_fresh_readonly "table" (llvm_array 64 (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length))));
  (p, p_ptr) <- ptr_to_fresh "p" (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));
  d <- crucible_fresh_var "d" (llvm_int 16);
  tmp_ptr <- crucible_alloc (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));

  crucible_execute_func [p_ptr, (crucible_term d), tmp_ptr, table_ptr];

  crucible_points_to p_ptr (crucible_term {{fiat_double_add_body table p d}});
};

let conditional_subtract_if_even_ct_same_l_spec = do {
  
  (p1, p1_ptr) <- ptr_to_fresh "p1" (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));
  (p2, p2_ptr) <- ptr_to_fresh_readonly "p2" (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));
  tmp_ptr <- crucible_alloc (llvm_array 3 (llvm_array p384_felem_limbs (llvm_int limb_length)));
  (scalar, scalar_ptr) <- ptr_to_fresh_readonly "p_scalar" i384;

  crucible_execute_func [p1_ptr, p1_ptr, p2_ptr, scalar_ptr, tmp_ptr];

  crucible_points_to p1_ptr (crucible_term {{conditional_subtract_if_even_ct p1 scalar p2}});
};

fiat_p384_from_generic_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_from_generic"
  p384_from_generic_spec;

fiat_p384_to_generic_ov <- crucible_llvm_unsafe_assume_spec
  m
  "fiat_p384_to_generic"
  p384_to_generic_spec;

/*
Need to verify against a constant-time spec, and then prove equivalence in Cryptol
fiat_p384_select_point_ov <- llvm_verify m
  "fiat_p384_select_point" [fiat_p384_cmovznz_same_r_ov] true
  p384_select_point_spec (w4_unint_z3 []);
  */

fiat_p384_select_point_ov <- crucible_llvm_unsafe_assume_spec m
  "fiat_p384_select_point" 
  p384_select_point_spec;

fiat_p384_mul_scalar_rwnaf_ov <- crucible_llvm_unsafe_assume_spec m
  "fiat_p384_mul_scalar_rwnaf" 
  p384_mul_scalar_rwnaf_spec;

fiat_p384_opp_ov <- crucible_llvm_unsafe_assume_spec m
  "fiat_p384_opp" 
  p384_opp_spec;

fiat_p384_copy_ov <- crucible_llvm_unsafe_assume_spec m
  "fiat_p384_copy" 
  p384_copy_spec;

fiat_p384_pre_comp_table_ov <- crucible_llvm_unsafe_assume_spec m
  "fiat_p384_pre_comp_table" 
  p384_pre_comp_table_spec;


fiat_p384_mul_loop_body_ov <- llvm_verify m "fiat_p384_mul_loop_body"
  [ value_barrier_u64_ov
  , fiat_p384_point_add_jac_ov
  , fiat_p384_point_add_same_r_jac_ov
  , fiat_p384_point_add_same_l_jac_ov
  , fiat_p384_point_double_ov
  , fiat_p384_point_double_same_ov
  , fiat_p384_from_generic_ov
  , fiat_p384_to_generic_ov
  , fiat_p384_cmovznz_ov
  , fiat_p384_cmovznz_same_l_ov
  , fiat_p384_cmovznz_same_r_ov
  , fiat_p384_select_point_ov
  , fiat_p384_mul_scalar_rwnaf_ov
  , fiat_p384_opp_ov
  , fiat_p384_copy_ov
  , fiat_p384_pre_comp_table_ov
  ]
  true
  fiat_p384_mul_loop_body_spec
  (do {
  goal_eval_unint 
      ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub", "fiat_mul_scalar_rwnaf", "fiat_from_generic", "fiat_to_generic", "fiat_field_opp", "fiat_point_add", "fiat_point_double", "fiat_select_point",
      "fiat_field_cmovznz"];

  //print_goal; 
  w4_unint_z3 ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub", "fiat_mul_scalar_rwnaf", "fiat_from_generic", "fiat_to_generic", "fiat_field_opp", "fiat_point_add", "fiat_point_double", "fiat_select_point", 
  "fiat_field_cmovznz"];
  });

conditional_subtract_if_even_ct_same_l_ov <- crucible_llvm_unsafe_assume_spec m
  "conditional_subtract_if_even_ct" 
  conditional_subtract_if_even_ct_same_l_spec;

/*
fiat_double_add_body_equiv_thm <- prove_folding_theorem 
  {{\ t p d -> (fiat_double_add_body t p d) == fiat_double_add_body t p d}};
*/

p384_fiat_point_mul_ov <- llvm_verify m "fiat_p384_point_mul"
  [ value_barrier_u64_ov
  , fiat_p384_point_add_jac_ov
  , fiat_p384_point_add_same_r_jac_ov
  , fiat_p384_point_add_same_l_jac_ov
  , fiat_p384_point_double_ov
  , fiat_p384_point_double_same_ov
  , fiat_p384_from_generic_ov
  , fiat_p384_to_generic_ov
  , fiat_p384_cmovznz_ov
  , fiat_p384_cmovznz_same_l_ov
  , fiat_p384_cmovznz_same_r_ov
  , fiat_p384_select_point_ov
  , fiat_p384_mul_scalar_rwnaf_ov
  , fiat_p384_opp_ov
  , fiat_p384_copy_ov
  , fiat_p384_pre_comp_table_ov
  //, fiat_p384_mul_loop_body_ov
  , conditional_subtract_if_even_ct_same_l_ov
  ]
  true
  p384_fiat_point_mul_spec
  (do {
    goal_eval_unint 
      ["fiat_field_square", "fiat_field_add", "fiat_field_sub", "fiat_field_mul", "fiat_mul_scalar_rwnaf", "fiat_field_opp",
   "fiat_select_point",
  "conditional_subtract_if_even_ct", "fiat_pre_comp_table"
  //, "fiat_double_add_body"
  ];
  

  (w4_unint_z3 ["fiat_field_square", "fiat_field_add", "fiat_field_sub", 
  "fiat_field_mul",
  "fiat_mul_scalar_rwnaf", "fiat_field_opp",
   "fiat_select_point",
  "conditional_subtract_if_even_ct", "fiat_pre_comp_table"
  //, "fiat_double_add_body"
  ]);
  }

  );

fiat_p384_point_mul_ov <- llvm_verify m "ec_GFp_nistp384_point_mul"
  [ value_barrier_u64_ov
  , fiat_p384_point_add_jac_ov
  , fiat_p384_point_add_same_r_jac_ov
  , fiat_p384_point_add_same_l_jac_ov
  , fiat_p384_point_double_ov
  , fiat_p384_point_double_same_ov
  , fiat_p384_from_generic_ov
  , fiat_p384_to_generic_ov
  , fiat_p384_cmovznz_ov
  , fiat_p384_cmovznz_same_l_ov
  , fiat_p384_cmovznz_same_r_ov
  , fiat_p384_select_point_ov
  , fiat_p384_mul_scalar_rwnaf_ov
  , fiat_p384_opp_ov
  , fiat_p384_copy_ov
  , fiat_p384_pre_comp_table_ov
  , p384_fiat_point_mul_ov
  ]
  true
  p384_point_mul_spec
  (w4_unint_z3 ["fiat_field_square", "fiat_field_mul", "fiat_field_add", "fiat_field_sub", "fiat_mul_scalar_rwnaf", "fiat_from_generic", "fiat_to_generic", "fiat_field_opp"]);

